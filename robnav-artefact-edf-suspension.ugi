process control_robloco graphinfo {
location shutdown (527,170);
locationName shutdown(-10,-30);
location receive (190,80);
locationName receive(-10,-30);
location unspawned (187,-51);
locationName unspawned(-10,-30);
location decode (40,230);
locationName decode(-10,-30);
location manage (-8,433);
locationName manage(-10,-30);
location wait (527,425);
locationName wait(-10,-30);
location finish (331,425);
locationName finish(-10,-30);
sync unspawned receive 1 (-78,-48);
trans receive decode 1 (-73,-62);
guard receive decode 1 (-90,-130);
sync receive decode 1 (-115,-87);
assign receive decode 1 (-132,-62);
guard decode finish 1 (-49,-4);
assign decode finish 1 (-134,21);
assign manage finish 1 (-161,38);
guard decode manage 1 (-203,-25);
guard finish receive 1 (-56,-40);
sync finish receive 1 (-56,-14);
assign finish receive 1 (-56,11);
guard receive decode 2 (-47,-19);
sync receive decode 2 (-47,15);
guard finish wait 1 (-55,-34);
guard wait shutdown 1 (-85,-93);
sync wait shutdown 1 (-425,-144);
assign wait shutdown 1 (-85,-68);
}
process Timer_odo_robloco graphinfo {
location shutdown (-85,76);
locationName shutdown(-48,-29);
location start (190,80);
locationName start(-10,-30);
invariant start(22,-4);
trans start start 1 (-54,-114);
trans start start 1 (56,-114);
guard start start 1 (-29,-131);
assign start start 1 (-97,-105);
sync start shutdown 1 (-77,7);
}
process Manager_odo_robloco graphinfo {
location start (-51,-8);
locationName start(-10,-30);
location manage (221,-221);
locationName manage(-10,-30);
location ask (190,230);
locationName ask(-10,-30);
invariant ask(-10,15);
location count (841,144);
locationName count(-10,-30);
location decide (493,-102);
locationName decide(-26,26);
location error (552,365);
locationName error(-10,-30);
trans manage manage 1 (68,-102);
trans manage manage 1 (119,-8);
guard manage manage 1 (59,-102);
sync manage manage 1 (68,-76);
assign manage manage 1 (59,-51);
trans manage manage 2 (-263,-195);
trans manage manage 2 (-348,-34);
guard manage manage 2 (-425,-144);
sync manage manage 2 (-374,-102);
assign manage manage 2 (-501,-59);
guard manage start 1 (-43,-81);
sync manage start 1 (25,-39);
assign manage start 1 (-187,-39);
guard start ask 1 (-298,-69);
sync start ask 1 (-52,-43);
assign start ask 1 (-196,-18);
guard ask error 1 (54,0);
sync ask count 1 (-73,-9);
trans count count 1 (-68,76);
trans count count 1 (17,85);
guard count count 1 (-59,77);
sync count count 1 (-34,102);
assign count count 1 (-93,119);
trans count count 2 (-17,-119);
trans count count 2 (76,-102);
guard count count 2 (8,-136);
sync count count 2 (17,-110);
assign count count 2 (25,-93);
guard count decide 1 (-123,-89);
sync count decide 1 (-72,-46);
assign count decide 1 (-72,-29);
trans count decide 2 (-140,81);
guard count decide 2 (-234,55);
sync count decide 2 (-157,72);
assign count decide 2 (-276,89);
trans count decide 3 (123,-148);
guard count decide 3 (30,-174);
sync count decide 3 (64,-140);
assign count decide 3 (-47,-123);
guard decide ask 1 (-78,29);
sync decide ask 1 (-69,55);
guard decide start 1 (-119,-21);
sync decide start 1 (-77,21);
assign decide start 1 (-221,21);
guard decide manage 1 (-111,-51);
sync decide manage 1 (-17,-17);
assign decide manage 1 (-94,0);
}
process Perm_odo_robloco graphinfo {
location start_ (-85,85);
locationName start_(-10,-30);
invariant start_(-10,15);
location ether_ (190,80);
locationName ether_(-10,-30);
guard start_ ether_ 1 (-52,-40);
sync start_ ether_ 1 (-94,-23);
assign start_ ether_ 1 (-44,3);
}
process InitPosPort_robloco_ graphinfo {
location start_ (-68,144);
locationName start_(-10,-30);
location start_2 (190,80);
locationName start_2(-10,-30);
invariant start_2(14,5);
location ether_ (178,340);
locationName ether_(-10,-30);
guard ether_ start_ 1 (-242,-55);
sync ether_ start_ 1 (-114,4);
assign ether_ start_ 1 (-140,38);
guard start_ start_2 1 (-53,-36);
sync start_ start_2 1 (-44,-19);
assign start_ start_2 1 (-69,15);
guard start_2 ether_ 1 (-14,-74);
assign start_2 ether_ 1 (-65,-40);
trans ether_ ether_ 1 (-59,59);
trans ether_ ether_ 1 (9,76);
guard ether_ ether_ 1 (-229,34);
sync ether_ ether_ 1 (-119,51);
assign ether_ ether_ 1 (-144,85);
}
process TrackOdoStart_robloco_ graphinfo {
location start_ (59,416);
locationName start_(-10,-30);
invariant start_(-10,15);
location odo_compute_ (190,80);
locationName odo_compute_(-10,-30);
location odo_compute_2 (297,-127);
locationName odo_compute_2(-10,-30);
invariant odo_compute_2(-10,15);
location stop_ (1300,391);
locationName stop_(-10,-30);
invariant stop_(-10,15);
location pause_odo_compute_ (1054,59);
locationName pause_odo_compute_(-10,-30);
location ether_ (697,425);
locationName ether_(-10,-30);
guard ether_ start_ 1 (-166,-63);
sync ether_ start_ 1 (-140,-4);
assign ether_ start_ 1 (-174,13);
guard start_ odo_compute_ 1 (-73,66);
assign start_ odo_compute_ 1 (-73,92);
guard odo_compute_ odo_compute_2 1 (-209,-45);
sync odo_compute_ odo_compute_2 1 (-113,163);
assign odo_compute_ odo_compute_2 1 (-311,31);
guard odo_compute_2 pause_odo_compute_ 1 (-29,-51);
assign odo_compute_2 pause_odo_compute_ 1 (-140,-25);
trans stop_ ether_ 1 (-89,93);
guard stop_ ether_ 1 (-106,68);
assign stop_ ether_ 1 (-233,93);
guard pause_odo_compute_ odo_compute_ 1 (-359,-44);
sync pause_odo_compute_ odo_compute_ 1 (-121,-10);
assign pause_odo_compute_ odo_compute_ 1 (-155,7);
guard pause_odo_compute_ stop_ 1 (-421,-106);
sync pause_odo_compute_ stop_ 1 (-106,-72);
assign pause_odo_compute_ stop_ 1 (-123,-55);
trans ether_ stop_ 1 (-80,-85);
guard ether_ stop_ 1 (-216,-128);
sync ether_ stop_ 1 (-123,-77);
assign ether_ stop_ 1 (-157,-51);
}
process Timer_track_robloco graphinfo {
location shutdown (-297,85);
locationName shutdown(-10,-30);
location start (190,80);
locationName start(-10,-30);
invariant start(14,5);
location idle (190,230);
locationName idle(-10,-30);
trans start start 1 (-63,-97);
trans start start 1 (99,-97);
guard start start 1 (-12,-122);
assign start start 1 (-80,-88);
sync start shutdown 1 (-91,-23);
sync idle start 1 (-60,-15);
assign idle start 1 (-20,6);
}
process Manager_track_robloco graphinfo {
location start (76,-93);
locationName start(-10,-30);
location manage (425,-272);
locationName manage(0,-34);
location ask (190,230);
locationName ask(-10,-30);
invariant ask(-10,15);
location count (824,280);
locationName count(-10,-30);
location decide (654,-59);
locationName decide(-10,-30);
location error (544,433);
locationName error(-10,-30);
trans manage manage 1 (-391,-59);
trans manage manage 1 (-204,-238);
guard manage manage 1 (-467,-212);
sync manage manage 1 (-366,-187);
assign manage manage 1 (-510,-153);
trans manage manage 2 (374,-153);
trans manage manage 2 (459,-8);
guard manage manage 2 (340,-68);
sync manage manage 2 (357,-51);
assign manage manage 2 (221,-25);
guard manage start 1 (-114,-47);
sync manage start 1 (22,-30);
assign manage start 1 (-267,-22);
guard start ask 1 (-260,-34);
sync start ask 1 (-31,-9);
assign start ask 1 (-277,8);
guard ask error 1 (-53,-17);
sync ask count 1 (-31,-26);
trans count count 1 (179,-195);
trans count count 1 (230,51);
guard count count 1 (85,-212);
sync count count 1 (111,-187);
assign count count 1 (9,-161);
trans count count 2 (102,128);
trans count count 2 (-127,128);
guard count count 2 (-51,85);
sync count count 2 (-34,111);
assign count count 2 (-136,145);
guard count decide 1 (-110,-85);
sync count decide 1 (-17,-25);
assign count decide 1 (-127,-68);
trans count decide 2 (-153,0);
guard count decide 2 (-238,-42);
sync count decide 2 (-144,26);
assign count decide 2 (-314,0);
trans count decide 3 (77,-110);
guard count decide 3 (43,-135);
sync count decide 3 (77,-85);
assign count decide 3 (-8,-110);
guard decide ask 1 (-48,0);
sync decide ask 1 (-48,17);
guard decide start 1 (-195,-26);
sync decide start 1 (-42,-51);
assign decide start 1 (-221,8);
guard decide manage 1 (-114,-30);
sync decide manage 1 (-21,-13);
assign decide manage 1 (-72,4);
}
process Perm_track_robloco graphinfo {
location unspawned (-170,76);
locationName unspawned(-10,-30);
location start_ (190,80);
locationName start_(-10,-30);
location start_2 (187,331);
locationName start_2(-10,-30);
invariant start_2(-10,15);
location ether_ (-170,331);
locationName ether_(-10,-30);
sync unspawned start_ 1 (-69,-27);
assign unspawned start_ 1 (-10,7);
guard start_ start_2 1 (-52,-86);
sync start_ start_2 1 (-10,-69);
assign start_ start_2 1 (-58,-50);
guard start_2 ether_ 1 (-16,-42);
sync start_2 ether_ 1 (-84,-25);
assign start_2 ether_ 1 (-127,0);
}
process TrackSpeedStart_robloco_ graphinfo {
location start_ (40,80);
locationName start_(-10,-30);
location start_2 (190,80);
locationName start_2(-10,-30);
invariant start_2(-10,15);
location track_ (450,85);
locationName track_(-10,-30);
location track_2 (714,263);
locationName track_2(-10,-30);
invariant track_2(-10,15);
location stop_ (195,442);
locationName stop_(-10,-30);
location stop_2 (-25,535);
locationName stop_2(-10,-30);
invariant stop_2(-10,15);
location pause_track_ (637,433);
locationName pause_track_(-10,-30);
location ether_ (-229,289);
locationName ether_(-10,-30);
guard ether_ start_ 1 (-178,-40);
sync ether_ start_ 1 (1,11);
assign ether_ start_ 1 (-84,-74);
guard start_ start_2 1 (-22,-38);
sync start_ start_2 1 (-13,-21);
assign start_ start_2 1 (-60,0);
guard start_2 track_ 1 (-14,11);
assign start_2 track_ 1 (-82,-23);
guard track_ track_2 1 (-64,-38);
sync track_ track_2 1 (-30,-21);
assign track_ track_2 1 (-30,4);
guard track_2 pause_track_ 1 (5,-34);
assign track_2 pause_track_ 1 (-21,-8);
guard stop_ stop_2 1 (0,-21);
sync stop_ stop_2 1 (17,-4);
assign stop_ stop_2 1 (-43,13);
guard stop_2 ether_ 1 (-51,-4);
assign stop_2 ether_ 1 (-77,30);
guard pause_track_ track_ 1 (-314,-38);
sync pause_track_ track_ 1 (-152,-64);
assign pause_track_ track_ 1 (-67,38);
guard pause_track_ stop_ 1 (-187,-55);
sync pause_track_ stop_ 1 (-68,5);
assign pause_track_ stop_ 1 (-110,22);
guard ether_ stop_ 1 (-119,-8);
sync ether_ stop_ 1 (-93,-25);
assign ether_ stop_ 1 (-51,43);
}
process control_robmotion graphinfo {
location shutdown (688,178);
locationName shutdown(-10,-30);
location receive (51,85);
locationName receive(-10,-30);
location unspawned (59,-102);
locationName unspawned(-10,-30);
location decode (-119,221);
locationName decode(-10,-30);
location manage (-93,527);
locationName manage(-10,-30);
location wait (680,518);
locationName wait(-10,-30);
location finish (442,527);
locationName finish(-10,-30);
sync unspawned receive 1 (-106,-60);
trans receive decode 1 (-127,-111);
guard receive decode 1 (-170,-119);
sync receive decode 1 (-178,-102);
assign receive decode 1 (-204,-77);
guard decode finish 1 (-161,-77);
assign decode finish 1 (-246,-34);
assign manage finish 1 (-199,17);
guard decode manage 1 (-208,34);
trans finish receive 1 (153,-204);
guard finish receive 1 (111,-179);
sync finish receive 1 (102,-153);
assign finish receive 1 (9,-238);
guard receive decode 2 (-51,-9);
sync receive decode 2 (-42,8);
guard finish wait 1 (-51,-29);
guard wait shutdown 1 (-123,-85);
sync wait shutdown 1 (-21,17);
assign wait shutdown 1 (-132,-34);
}
process Timer_plan_robmotion graphinfo {
location shutdown (-272,76);
locationName shutdown(-10,-30);
location start (190,80);
locationName start(-10,-30);
invariant start(22,-4);
trans start start 1 (-29,-156);
trans start start 1 (65,-156);
guard start start 1 (-20,-148);
assign start start 1 (-80,-173);
sync start shutdown 1 (-103,-27);
}
process Manager_plan_robmotion graphinfo {
location start (34,-119);
locationName start(-10,-30);
location manage (586,-187);
locationName manage(-10,-30);
location ask (161,459);
locationName ask(-10,-30);
invariant ask(-10,15);
location count (1079,459);
locationName count(-10,-30);
location decide (637,136);
locationName decide(-10,-30);
location error (467,705);
locationName error(-10,-30);
location delay (518,-76);
locationName delay(0,0);
invariant delay(-10,17);
guard delay manage 1 (-16,-34);
guard decide delay 1 (-41,-34);
sync decide delay 1 (-41,-17);
assign decide delay 1 (-41,0);
trans manage manage 1 (-280,-85);
trans manage manage 1 (-136,-229);
guard manage manage 1 (-391,-204);
sync manage manage 1 (-297,-178);
assign manage manage 1 (-561,-144);
trans manage manage 2 (408,-25);
trans manage manage 2 (272,145);
guard manage manage 2 (170,43);
sync manage manage 2 (289,60);
assign manage manage 2 (128,85);
guard manage start 1 (-259,-42);
sync manage start 1 (-140,-25);
assign manage start 1 (-242,0);
guard start ask 1 (-114,-77);
sync start ask 1 (-42,-30);
assign start ask 1 (-80,8);
guard ask error 1 (34,13);
sync ask count 1 (-212,-17);
trans count count 1 (51,-187);
trans count count 1 (238,-9);
guard count count 1 (111,-162);
sync count count 1 (128,-145);
assign count count 1 (60,-111);
trans count count 2 (77,204);
trans count count 2 (-187,221);
guard count count 2 (-85,187);
sync count count 2 (-93,204);
assign count count 2 (-153,229);
guard count decide 1 (-212,-102);
sync count decide 1 (-119,-85);
assign count decide 1 (-170,-68);
trans count decide 2 (-340,94);
guard count decide 2 (-357,-8);
sync count decide 2 (-323,17);
assign count decide 2 (-433,43);
trans count decide 3 (145,-238);
guard count decide 3 (111,-246);
sync count decide 3 (136,-221);
assign count decide 3 (60,-195);
guard decide ask 1 (-34,-8);
sync decide ask 1 (-8,-25);
guard decide start 1 (-250,-84);
sync decide start 1 (-233,-50);
assign decide start 1 (-259,-25);
}
process Perm_plan_robmotion graphinfo {
location start_ (-102,85);
locationName start_(-10,-30);
invariant start_(-10,15);
location ether_ (190,80);
locationName ether_(-10,-30);
guard start_ ether_ 1 (-19,-40);
sync start_ ether_ 1 (-86,-23);
assign start_ ether_ 1 (-19,3);
}
process GotoPosition_robmotion_ graphinfo {
location start_ (40,80);
locationName start_(-10,-30);
location start_2 (212,-119);
locationName start_2(-10,-30);
invariant start_2(-10,15);
location read_ports_ (646,-102);
locationName read_ports_(-68,-34);
location read_ports_2 (1215,-127);
locationName read_ports_2(-10,-30);
invariant read_ports_2(-10,15);
location compute_speed_ (1224,76);
locationName compute_speed_(-10,-30);
location compute_speed_2 (901,790);
locationName compute_speed_2(-10,-30);
invariant compute_speed_2(-10,15);
location pause_read_ports_ (799,433);
locationName pause_read_ports_(-10,-30);
location ether_ (110,484);
locationName ether_(0,-34);
guard ether_ start_ 1 (-228,-112);
sync ether_ start_ 1 (-100,-138);
assign ether_ start_ 1 (-100,-53);
guard start_ start_2 1 (-177,-32);
sync start_ start_2 1 (-71,84);
assign start_ start_2 1 (-143,19);
guard start_2 read_ports_ 1 (-55,-26);
assign start_2 read_ports_ 1 (-132,0);
guard read_ports_ read_ports_2 1 (-276,-39);
sync read_ports_ read_ports_2 1 (-106,-13);
assign read_ports_ read_ports_2 1 (-157,4);
guard read_ports_2 compute_speed_ 1 (-46,-51);
assign read_ports_2 compute_speed_ 1 (-131,17);
guard compute_speed_ compute_speed_2 1 (51,-229);
sync compute_speed_ compute_speed_2 1 (68,-204);
assign compute_speed_ compute_speed_2 1 (9,-178);
guard compute_speed_2 pause_read_ports_ 1 (-43,-84);
assign compute_speed_2 pause_read_ports_ 1 (-187,-33);
guard compute_speed_2 ether_ 1 (90,34);
assign compute_speed_2 ether_ 1 (-293,68);
guard pause_read_ports_ read_ports_ 1 (-170,-131);
sync pause_read_ports_ read_ports_ 1 (-102,-72);
assign pause_read_ports_ read_ports_ 1 (-110,-46);
guard pause_read_ports_ ether_ 1 (-259,-59);
sync pause_read_ports_ ether_ 1 (-165,18);
assign pause_read_ports_ ether_ 1 (-191,35);
trans ether_ ether_ 1 (-118,102);
trans ether_ ether_ 1 (-127,-68);
guard ether_ ether_ 1 (-450,-68);
sync ether_ ether_ 1 (-229,-8);
assign ether_ ether_ 1 (-288,9);
}
process control_robmap graphinfo {
location shutdown (739,178);
locationName shutdown(-10,-30);
location receive (190,80);
locationName receive(-10,-30);
location unspawned (187,-127);
locationName unspawned(-10,-30);
location decode (-263,153);
locationName decode(-10,-30);
location manage (-51,425);
locationName manage(-10,-30);
location wait (748,382);
locationName wait(-10,-30);
location finish (340,380);
locationName finish(-10,-30);
sync unspawned receive 1 (-86,-62);
trans receive decode 1 (-202,-209);
guard receive decode 1 (-244,-243);
sync receive decode 1 (-270,-218);
assign receive decode 1 (-253,-201);
guard decode finish 1 (-106,-45);
assign decode finish 1 (-208,-20);
assign manage finish 1 (-152,23);
guard decode manage 1 (-115,51);
guard finish receive 1 (-95,-94);
sync finish receive 1 (-78,-69);
assign finish receive 1 (-78,-43);
guard receive decode 2 (-108,-23);
sync receive decode 2 (-91,3);
guard finish wait 1 (-60,-24);
guard wait shutdown 1 (-97,-51);
sync wait shutdown 1 (-12,-17);
assign wait shutdown 1 (-97,9);
}
process Timer_fuse_robmap graphinfo {
location shutdown (-195,85);
locationName shutdown(-10,-30);
location start (190,80);
locationName start(-10,-30);
invariant start(-10,15);
trans start start 1 (-71,-173);
trans start start 1 (90,-173);
guard start start 1 (-20,-190);
assign start start 1 (-71,-148);
sync start shutdown 1 (-91,-23);
}
process Manager_fuse_robmap graphinfo {
location start (-263,-76);
locationName start(-10,-30);
location manage (399,-161);
locationName manage(-10,-30);
location ask (34,408);
locationName ask(-10,-30);
invariant ask(-10,15);
location count (841,306);
locationName count(-10,-30);
location decide (340,80);
locationName decide(-10,-30);
location error (535,569);
locationName error(-10,-30);
trans manage manage 1 (-246,-68);
trans manage manage 1 (-153,-170);
guard manage manage 1 (-306,-162);
sync manage manage 1 (-272,-136);
assign manage manage 1 (-424,-119);
trans manage manage 2 (272,-162);
trans manage manage 2 (366,-26);
guard manage manage 2 (264,-145);
sync manage manage 2 (272,-128);
assign manage manage 2 (196,-85);
guard manage start 1 (-297,-60);
sync manage start 1 (-170,-35);
assign manage start 1 (-272,-9);
guard start ask 1 (-336,-81);
sync start ask 1 (-47,-22);
assign start ask 1 (-353,-47);
guard ask error 1 (-4,-21);
sync ask count 1 (-382,-142);
trans count count 1 (-102,247);
trans count count 1 (111,238);
guard count count 1 (-59,195);
sync count count 1 (-42,229);
assign count count 1 (-59,255);
trans count count 2 (162,-212);
trans count count 2 (264,-59);
guard count count 2 (111,-230);
sync count count 2 (179,-153);
assign count count 2 (51,-187);
guard count decide 1 (-216,-83);
sync count decide 1 (-114,-57);
assign count decide 1 (-293,70);
trans count decide 2 (-267,53);
guard count decide 2 (-301,28);
sync count decide 2 (-259,53);
assign count decide 2 (-191,-40);
trans count decide 3 (90,-210);
guard count decide 3 (81,-176);
sync count decide 3 (107,-159);
assign count decide 3 (-4,-134);
guard decide ask 1 (-17,-15);
sync decide ask 1 (-17,11);
guard decide start 1 (-199,-44);
sync decide start 1 (-72,-19);
assign decide start 1 (-199,-2);
guard decide manage 1 (-89,-62);
sync decide manage 1 (5,-36);
assign decide manage 1 (-63,-19);
}
process Perm_fuse_robmap graphinfo {
location start_ (-136,85);
locationName start_(-10,-30);
invariant start_(-10,15);
location ether_ (190,80);
locationName ether_(-10,-30);
guard start_ ether_ 1 (-27,-40);
sync start_ ether_ 1 (-78,-23);
assign start_ ether_ 1 (-19,3);
}
process FuseStart_robmap_ graphinfo {
location start_ (-85,17);
locationName start_(-10,-30);
location start_2 (195,-93);
locationName start_2(-10,-30);
invariant start_2(-10,15);
location read_laser_ (190,230);
locationName read_laser_(-10,-30);
location read_laser_2 (790,25);
locationName read_laser_2(-10,-30);
invariant read_laser_2(-10,15);
location fuse_map_ (1079,127);
locationName fuse_map_(-10,-30);
location fuse_map_2 (1105,510);
locationName fuse_map_2(-10,-30);
invariant fuse_map_2(-10,15);
location stop_ (0,612);
locationName stop_(-10,-30);
invariant stop_(-10,15);
location pause_read_laser_ (578,620);
locationName pause_read_laser_(-10,-30);
location ether_ (-93,374);
locationName ether_(-10,-30);
guard ether_ start_ 1 (-191,-76);
sync ether_ start_ 1 (-81,-8);
assign ether_ start_ 1 (-157,26);
guard start_ start_2 1 (-47,-21);
sync start_ start_2 1 (-30,4);
assign start_ start_2 1 (-72,21);
guard start_2 read_laser_ 1 (-22,-68);
assign start_2 read_laser_ 1 (-62,87);
guard read_laser_ read_laser_2 1 (37,-17);
sync read_laser_ read_laser_2 1 (62,-42);
assign read_laser_ read_laser_2 1 (-6,-76);
guard read_laser_2 fuse_map_ 1 (-59,-25);
assign read_laser_2 fuse_map_ 1 (-67,0);
guard fuse_map_ fuse_map_2 1 (-38,-148);
sync fuse_map_ fuse_map_2 1 (-21,-123);
assign fuse_map_ fuse_map_2 1 (-98,-97);
guard fuse_map_2 pause_read_laser_ 1 (-17,-30);
assign fuse_map_2 pause_read_laser_ 1 (-85,-4);
trans stop_ ether_ 1 (-73,51);
guard stop_ ether_ 1 (-90,8);
assign stop_ ether_ 1 (-209,42);
guard pause_read_laser_ read_laser_ 1 (-61,-26);
sync pause_read_laser_ read_laser_ 1 (7,42);
assign pause_read_laser_ read_laser_ 1 (41,93);
guard pause_read_laser_ stop_ 1 (-179,-64);
sync pause_read_laser_ stop_ 1 (-111,-4);
assign pause_read_laser_ stop_ 1 (-179,13);
trans ether_ stop_ 1 (148,-102);
guard ether_ stop_ 1 (4,-60);
sync ether_ stop_ 1 (71,-94);
assign ether_ stop_ 1 (-5,8);
}
process control_roblaser graphinfo {
location shutdown (654,195);
locationName shutdown(-10,-30);
location receive (102,-85);
locationName receive(-10,-30);
location unspawned (119,-170);
locationName unspawned(-10,-30);
location decode (-68,306);
locationName decode(-10,-30);
location manage (-93,578);
locationName manage(-10,-30);
location wait (884,374);
locationName wait(-10,-30);
location finish (595,637);
locationName finish(-10,-30);
sync unspawned receive 1 (-102,-26);
trans receive decode 1 (-263,-102);
guard receive decode 1 (-280,-127);
sync receive decode 1 (-306,-110);
assign receive decode 1 (-314,-68);
guard decode finish 1 (-178,-72);
assign decode finish 1 (-305,-46);
assign manage finish 1 (-259,5);
guard decode manage 1 (-175,-60);
guard finish receive 1 (-68,-30);
sync finish receive 1 (-76,-4);
assign finish receive 1 (-102,30);
guard receive decode 2 (-25,-42);
sync receive decode 2 (-34,-8);
guard finish wait 1 (-8,-4);
guard wait shutdown 1 (-106,-46);
sync wait shutdown 1 (-30,-29);
assign wait shutdown 1 (-115,-12);
}
process Timer_scan_roblaser graphinfo {
location shutdown (-170,85);
locationName shutdown(-10,-30);
location start (190,80);
locationName start(-10,-30);
invariant start(-10,15);
trans start start 1 (-80,-207);
trans start start 1 (82,-207);
guard start start 1 (-46,-241);
assign start start 1 (-105,-199);
sync start shutdown 1 (-78,-23);
}
process Manager_scan_roblaser graphinfo {
location start (-85,-195);
locationName start(-10,-30);
location manage (501,-323);
locationName manage(-10,-30);
location ask (-51,34);
locationName ask(-10,-30);
invariant ask(-10,15);
location count (926,391);
locationName count(-10,-30);
location decide (884,34);
locationName decide(-10,-30);
location error (212,391);
locationName error(-10,-30);
trans manage manage 1 (-467,-51);
trans manage manage 1 (-212,-340);
guard manage manage 1 (-442,-289);
sync manage manage 1 (-365,-255);
assign manage manage 1 (-535,-221);
trans manage manage 2 (476,-314);
trans manage manage 2 (595,-51);
guard manage manage 2 (162,-255);
sync manage manage 2 (230,-212);
assign manage manage 2 (17,-170);
guard manage start 1 (-250,-47);
sync manage start 1 (-64,-30);
assign manage start 1 (-293,-13);
guard start ask 1 (-119,29);
sync start ask 1 (-25,46);
assign start ask 1 (-119,63);
guard ask error 1 (5,34);
sync ask count 1 (-131,-68);
trans count count 1 (247,-111);
trans count count 1 (383,323);
guard count count 1 (213,-136);
sync count count 1 (230,-119);
assign count count 1 (153,-102);
trans count count 2 (-17,229);
trans count count 2 (-399,93);
guard count count 2 (-408,119);
sync count count 2 (-357,136);
assign count count 2 (-365,153);
guard count decide 1 (-98,-119);
sync count decide 1 (-21,-93);
assign count decide 1 (-106,-76);
trans count decide 2 (140,-187);
guard count decide 2 (55,-195);
sync count decide 2 (123,-178);
assign count decide 2 (30,-161);
trans count decide 3 (-217,-51);
guard count decide 3 (-217,-85);
sync count decide 3 (-225,-68);
assign count decide 3 (-387,-51);
guard decide ask 1 (0,-26);
sync decide ask 1 (17,0);
guard decide start 1 (-340,-81);
sync decide start 1 (-187,-64);
assign decide start 1 (-357,-47);
guard decide manage 1 (-131,-77);
sync decide manage 1 (-55,-51);
assign decide manage 1 (-114,-34);
}
process Perm_scan_roblaser graphinfo {
location start_ (-238,85);
locationName start_(-10,-30);
invariant start_(-10,15);
location ether_ (190,80);
locationName ether_(-10,-30);
guard start_ ether_ 1 (-61,-31);
sync start_ ether_ 1 (-112,-23);
assign start_ ether_ 1 (-52,3);
}
process ScanMap_roblaser_ graphinfo {
location start_ (51,289);
locationName start_(-10,-30);
location start_2 (-68,195);
locationName start_2(-10,-30);
invariant start_2(-10,15);
location read_laser_ (0,-153);
locationName read_laser_(-10,-30);
invariant read_laser_(-10,15);
location write_lport_ (357,-59);
locationName write_lport_(-10,-30);
location write_lport_2 (1164,34);
locationName write_lport_2(-10,-30);
invariant write_lport_2(-10,15);
location stop_ (586,909);
locationName stop_(-10,-30);
invariant stop_(-10,15);
location pause_start_ (1300,595);
locationName pause_start_(-10,-30);
location ether_ (8,705);
locationName ether_(-10,-30);
guard ether_ start_ 1 (-88,-55);
sync ether_ start_ 1 (-71,-4);
assign ether_ start_ 1 (-105,21);
guard start_ start_2 1 (-26,-13);
sync start_ start_2 1 (0,4);
assign start_ start_2 1 (-111,21);
guard start_2 read_laser_ 1 (-8,-55);
assign start_2 read_laser_ 1 (-42,-80);
guard read_laser_ write_lport_ 1 (-17,-21);
assign read_laser_ write_lport_ 1 (-123,336);
guard write_lport_ write_lport_2 1 (-123,-22);
sync write_lport_ write_lport_2 1 (-106,4);
assign write_lport_ write_lport_2 1 (-157,-47);
guard write_lport_2 pause_start_ 1 (-51,-119);
assign write_lport_2 pause_start_ 1 (-195,-85);
trans stop_ ether_ 1 (-339,119);
guard stop_ ether_ 1 (-331,-25);
assign stop_ ether_ 1 (-280,136);
guard pause_start_ start_ 1 (-488,-77);
sync pause_start_ start_ 1 (-225,-51);
assign pause_start_ start_ 1 (-148,-26);
guard pause_start_ stop_ 1 (-289,-21);
sync pause_start_ stop_ 1 (-76,30);
assign pause_start_ stop_ 1 (-68,4);
trans ether_ stop_ 1 (-17,-229);
guard ether_ stop_ 1 (-221,-221);
sync ether_ stop_ 1 (-68,-204);
assign ether_ stop_ 1 (-119,-187);
}
process Urgency graphinfo {
location wait (40,80);
locationName wait(-10,-30);
trans wait wait 1 (-30,-30);
trans wait wait 1 (30,-30);
sync wait wait 1 (-60,-15);
}
process scheduler graphinfo {
location start (-348,17);
locationName start(-10,-30);
location update (306,25);
locationName update(-10,-30);
location give (8,476);
locationName give(-10,-30);
trans start start 1 (-60,-127);
trans start start 1 (59,-127);
guard start start 1 (-60,-161);
sync start start 1 (-26,-119);
assign start start 1 (-26,-93);
guard start update 1 (-47,-29);
sync start update 1 (4,4);
assign start update 1 (-30,21);
trans update update 1 (-179,-135);
trans update update 1 (136,-110);
guard update update 1 (-60,-161);
sync update update 1 (-34,-135);
guard update give 1 (30,-97);
assign update give 1 (-4,-55);
sync give start 1 (-51,-59);
assign give start 1 (-51,-34);
}
process client graphinfo {
location start (40,80);
locationName start(-10,-30);
location s1 (-144,93);
locationName s1(-10,-34);
location s2 (-459,93);
locationName s2(-10,-34);
location s3 (-671,297);
locationName s3(-10,-34);
location s4 (-416,484);
locationName s4(-10,-34);
location s5 (-119,484);
locationName s5(-10,-34);
location s6 (212,476);
locationName s6(-10,-34);
location s7 (569,467);
locationName s7(-10,-34);
location s8 (637,263);
locationName s8(-10,-34);
location s9 (663,-76);
locationName s9(-10,-34);
location s10 (612,-323);
locationName s10(-10,-34);
sync s9 s10 1 (0,-17);
sync s8 s9 1 (0,-17);
assign s8 s9 1 (0,0);
sync s7 s8 1 (-16,-17);
sync s6 s7 1 (-160,-17);
assign s6 s7 1 (-160,0);
sync s5 s6 1 (-147,-17);
sync s4 s5 1 (-131,-17);
assign s4 s5 1 (-131,0);
sync s3 s4 1 (-110,-17);
sync s2 s3 1 (-88,-17);
assign s2 s3 1 (-88,0);
sync s1 s2 1 (-140,-17);
sync start s1 1 (-74,-17);
assign start s1 1 (-74,0);
}
