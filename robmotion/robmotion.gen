#pragma requires  "robloco-genom3"
#pragma requires  "robsim-genom3"

#include "robsim/robsim-struct.idl"
#include "robloco/robloco-struct.idl"
#include "robmotion-struct.idl"

/* -------------------------- MODULE DECLARATION --------------------------- */
component robmotion {
  version  "2.0";
  lang	  "c";

/* ------------- DEFINITION OF THE MODULEâ€™s INTERNAL DATABASE -------------- */
 ids {
  robloco::speed_ref current_speed;
  robloco::position current_position; // where we are...
  robloco::position goal_position;   // where we want to go...
  robsim::map explored_map;	  // store the explored map in the IDS
  short verbose;
  short attempts;		// is the robot stuck trying to move toward the goal?
 };

  exception INVALID_GOAL, INVALID_POSITION, INVALID_MAP, PATH_BLOCKED;

/* ------------- DEFINITION OF PORTS -------------- */

port out robloco::speed_ref E_current_speed; // the speed to track.
port in robsim::map E_explored_map; 	// the perceived map produced by robmap.
port in robloco::position E_current_position; // the current position of the robot from loco port.

/* ------------------ TASK DEFINITION -------------------- */

task plan {
 period	    200 ms;
 priority   100;
 stack 	    4000;
 codel <start> InitPlanParameters(out ::ids) yield ether wcet 10 ms;
};

/* ------------------ SERVICES DEFINITION: The attributes -------------------- */
/*
attribute SetVerbose(in verbose = 0)
{
  doc		"Set the verbose level.";
};

attribute GetCurrentPosition(out current_position)
{
  doc		"To get the ids current_position content.";
};

attribute GetGoalPosition(out goal_position)
{
  doc		"To get the ids goal_position content.";
};

attribute GetCurrentSpeed(out current_speed)
{
  doc		"To get the ids current_speed content.";
};

attribute GetExploredMap(out explored_map)
{
  doc		"To get the ids explored_map content.";
};
*/
/* ------------------ SERVICES DEFINITION: The Functions -------------------- */
/*
function Stop()
{
 doc		"Stop motion scanning.";
 interrupts     GotoPosition;
};

*/
/* ------------------ SERVICES DEFINITION: The activities -------------------- */
/*
activity InitSpeedRefPort()
{
 doc 	 	      "Initialize the SpeedRef port";
 codel <start> 	      InitSpeedRefPort(port out E_current_speed) yield ether;
 task 		      plan;
};*/

activity GotoPosition (in robloco::position goto_position =  :"Goto position")
{
 doc 	 	      "Move to the given position";
 codel <start> 	      gotoposStart(in goto_position, port in E_current_position, port in E_explored_map, ids out goal_position, ids out attempts) 
                        yield read_ports wcet 5 ms;
 codel <read_ports>   gotopos_read_ports(ids out current_position, ids out explored_map, port in E_current_position, port in E_explored_map) 
                        yield compute_speed wcet 10 ms;
 codel <compute_speed> gotopos_compute_speed(ids in goal_position, ids in current_position, ids in explored_map, ids in verbose, ids out current_speed, ids inout attempts, port out E_current_speed) 
                        yield pause::read_ports, ether wcet 20 ms;
 interrupts 	      GotoPosition;
 task 		      plan;
 throw 		      INVALID_POSITION, INVALID_MAP, INVALID_GOAL, PATH_BLOCKED;
};

};
